% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ProMisesModel.R
\name{ProMisesModel}
\alias{ProMisesModel}
\title{ProMises model}
\usage{
ProMisesModel(data, maxIt = 10, t = .001, k = 0, Q = NULL, 
ref_ds = NULL, scaling = T, reflection= T, 
subj = F, centered = T, kCalibrate = F, D = NULL, p = 0.01
ind = 2)
}
\arguments{
\item{data}{data, i.e., array of matrices with dimension time points - voxels or list of matrices with dimension time points - voxels}

\item{maxIt}{maximum number of iterations}

\item{t}{the threshold value to be reached as the minimum relative reduction between the matrices}

\item{k}{value of the concentration parameter of the prior distribution}

\item{Q}{value of the location parameter of the prior distribution. It has dimension voxels x voxels, it could be not symmetric. If \code{Q=NULL}, it is set equal to a matrix of 0 (i.e. no regularization, classic GPA)}

\item{ref_ds}{starting reference matrix to align. If \code{NULL}, at the first iteration it is set equal to the element-wise mean of the data matrices}

\item{scaling}{Flag to apply scaling transformation}

\item{reflection}{Flag to apply reflection transformation}

\item{subj}{Flag if each subject has his/her own set of voxel after voxel selection step. If \code{subj=TRUE}, then the model considers a different location parameter for the prior distribution of each rotation parameter and \code{Q} has to be an array of dimensions voxels x voxels x number of matrices.}

\item{centered}{if \code{TRUE}, data matrices are centered before the algorithm starts}

\item{kCalibrate}{if \code{TRUE}, the parameters of the prior distribution are computed with the function \code{kCalibrate}}

\item{D}{squared euclidean distance matrix between the coordinates of the voxels. Necessary only when \code{kCalibrate = TRUE}}

\item{p}{distances to compute bandwith value for the \code{kCalibrate} function. Default value is 0.01}

\item{ind}{(only required in the case with two matrices) the index of the matrix to be used as reference, must be 1 or 2}
}
\value{
In the case with more than two matrices, \code{ProMisesModel} returns a list with four components:
\item{\code{Xest}}{an array with the aligned matrices}
\item{\code{R}}{an array with the rotation matrices}
\item{\code{dist}}{a vector with length equal to the number of iterations that contains the distances between a reference matrix and the previous one}
\item{\code{count}}{the number of iterations done by the algorithm}
In the case with only two matrices, \code{ProMisesModel} returns a list with two components:
\item{\code{Xest}}{an array with the aligned matrices}
\item{\code{R}}{an array with the rotation matrices (one is the identity)}
}
\description{
Performs the functional alignment using the von Mises Fisher Procrustes model with unknown reference matrix
}
\examples{
{
## create a random array of 3 matrices with 24576 time-points and 60 voxels
data<- array(rnorm(24576*60*3), dim = c(24576,60,3))
## Align the three matrices setting the location parameter equal to the identity and the concentration parameter equal to 1
out <- ProMisesModel(data, maxIt = 20, t = 1/100, k = 1, Q = diag(1,60), 
scaling = FALSE, reflection = FALSE, subj = FALSE, centered = FALSE)
}
}
\references{
For the theory on the ProMises model see: A. Andreella and L. Finos
(2022), Procrustes analysis for high-dimensional data, 
Psychometrika 87, 1422-1438
}
\author{
Angela Andreella and Daniela Corbetta
}
